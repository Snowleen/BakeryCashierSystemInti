/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author User
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List; 
import java.sql.PreparedStatement; 


public class ProductTable extends javax.swing.JFrame {
    
     
   private DefaultTableModel tableModel;

    
    public ProductTable() {
        initComponents();
        loadProductData(); 
        this.setLocationRelativeTo(null);
    }
    
    private void loadProductData() {
        // Create a table model to display
        tableModel = new DefaultTableModel(new String[]{"ID", "Name", "Desc", "Price", "Qty", "Disc"}, 0);
        jTable1.setModel(tableModel); // Set the model for the jTable

        // Connect to the database and fetch the data from my product table
        try (Connection conn = DBConnection.getConnection();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT * FROM product")) { 
            while (rs.next()) {
                int id = rs.getInt("product_id"); 
                String name = rs.getString("product_name"); 
                String desc = rs.getString("product_desc");
                double price = rs.getDouble("unit_price"); 
                int qty = rs.getInt("quantity");
                double disc = rs.getDouble("discount");
                tableModel.addRow(new Object[]{id, name, desc, price, qty, disc}); // Add new rows to the table modelfor new data
            }

            // Set fixed table column widths upon display so that the table fit nicely 
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(50); // ID column
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(140); // Name column
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(200); // Description column
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(50); // Price column
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(50); // Quantity column
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(50); // Discount column

            // Allow columns to be resized manually by the user
            jTable1.getTableHeader().setResizingAllowed(true);

            //disable auto resizing so that my preffered width can maintain
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void updateProductInventory(List<CartItem> cartItems) {
        try (Connection conn = DBConnection.getConnection()) {  // Make sure to get the connection
            for (CartItem item : cartItems) {
                String query = "UPDATE product SET quantity = quantity - ? WHERE product_name = ?";
                try (PreparedStatement stmt = conn.prepareStatement(query)) {
                    stmt.setInt(1, item.getQuantity());  // Decrease the quantity by the item quantity
                    stmt.setString(2, item.getName());   //get the product name which i would want to decrease the quantity
                    int rowsUpdated = stmt.executeUpdate();

                    if (rowsUpdated > 0) {
                        System.out.println("Product inventory updated for: " + item.getName());
                    } else {
                        System.out.println("Product not found or inventory update failed for: " + item.getName());
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Menu display");
        setPreferredSize(new java.awt.Dimension(800, 500));

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setText("Bakery Cashier System");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        jLabel2.setText("Menu display ");

        jTable1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jTable1.setModel(jTable1.getModel());
        jScrollPane1.setViewportView(jTable1);

        jButton1.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 696, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(60, 60, 60))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jScrollPane1)
                .addGap(130, 130, 130))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CashierDashboard cashierdashboard = new CashierDashboard();
        cashierdashboard.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new ProductTable().setVisible(true);
        });
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
